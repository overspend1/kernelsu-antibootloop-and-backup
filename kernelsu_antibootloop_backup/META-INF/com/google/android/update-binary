#!/sbin/sh

ZIPFILE="$3"
OUTFD="/proc/self/fd/$2"
OUTFD="/proc/self/fd/1"

# Setup environment
ui_print() {
  echo "ui_print $1" > "$OUTFD"
  echo "ui_print" > "$OUTFD"
}

require_new_api() {
  ui_print "***********************************"
  ui_print "! KernelSU installation failed"
  ui_print "! This module requires KernelSU API 2+"
  ui_print "! Please upgrade your KernelSU"
  ui_print "***********************************"
  exit 1
}

# Extract the installer
extract() {
  ui_print "- Extracting module files"
  unzip -o "$ZIPFILE" -x 'META-INF/*' -d $MODPATH >&2
}

# Check KernelSU API version
check_kernelsu() {
  ui_print "- Checking KernelSU environment"
  if [ -f /data/adb/kernelsu/version ]; then
    api_version=$(cat /data/adb/kernelsu/version)
    if [ "$api_version" -lt 2 ]; then
      require_new_api
    else
      ui_print "- KernelSU API version: $api_version"
    fi
  else
    require_new_api
  fi
}

# Main installation
main() {
  ui_print "******************************"
  ui_print "KernelSU Anti-Bootloop & Backup"
  ui_print "******************************"
  ui_print "- Installing v1.0.0"
  
  # Prepare module path
  MODPATH="/data/adb/modules/kernelsu_antibootloop_backup"
  rm -rf "$MODPATH"
  mkdir -p "$MODPATH"
  
  # Check environment
  check_kernelsu
  
  # Extract module files
  extract
  
  # Set permissions
  set_permissions
  
  # Execute customize.sh
  if [ -f "$MODPATH/customize.sh" ]; then
    ui_print "- Running customize.sh"
    . "$MODPATH/customize.sh"
  fi
  
  ui_print "- Installation complete"
  ui_print "- Reboot to activate the module"
  ui_print "******************************"
}

set_permissions() {
  ui_print "- Setting permissions"
  
  # Set executable permissions for scripts
  find "$MODPATH/scripts" -type f -exec chmod 755 {} \;
  chmod 755 "$MODPATH/customize.sh" 2>/dev/null
  chmod 755 "$MODPATH/uninstall.sh" 2>/dev/null
  chmod 755 "$MODPATH/scripts/post-fs-data.sh" 2>/dev/null
  chmod 755 "$MODPATH/scripts/service.sh" 2>/dev/null
  chmod 755 "$MODPATH/scripts/boot-completed.sh" 2>/dev/null
}

# Execute main function
main