name: Auto Release

on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: false

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set release version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ github.event.inputs.version }}" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          # Generate version from commit info
          COMMIT_COUNT=$(git rev-list --count HEAD)
          SHORT_SHA=$(git rev-parse --short HEAD)
          VERSION="v1.0.${COMMIT_COUNT}-${SHORT_SHA}"
        fi
        
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Extract version code
        VERSION_NUM=$(echo $VERSION | sed 's/v//' | sed 's/-.*//' | sed 's/\.//g')
        echo "version_code=$VERSION_NUM" >> $GITHUB_OUTPUT
        echo "Generated version: $VERSION (code: $VERSION_NUM)"
        
    - name: Update module.prop version
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        VERSION_CODE=$(echo $VERSION | sed 's/v//' | sed 's/\.//g')
        
        # Update version in module.prop
        sed -i "s/version=.*/version=$VERSION/" kernelsu_antibootloop_backup/module.prop
        sed -i "s/versionCode=.*/versionCode=$VERSION_CODE/" kernelsu_antibootloop_backup/module.prop
        
    - name: Create Module ZIP
      run: |
        cd kernelsu_antibootloop_backup
        
        # Smart naming based on module info
        MODULE_ID=$(grep '^id=' module.prop | cut -d'=' -f2)
        MODULE_NAME=$(grep '^name=' module.prop | cut -d'=' -f2 | sed 's/ /_/g')
        VERSION="${{ steps.version.outputs.version }}"
        
        ZIP_NAME="${MODULE_ID}-${VERSION}.zip"
        
        zip -r ../$ZIP_NAME . -x "*.git*" "*.md" "docs/*" "tests/*"
        cd ..
        
        echo "ZIP_FILE=$ZIP_NAME" >> $GITHUB_ENV
        echo "Created ZIP file: $ZIP_NAME"
        
    - name: Generate changelog
      id: changelog
      run: |
        # Get commits since last tag
        LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        if [ -z "$LAST_TAG" ]; then
          CHANGELOG=$(git log --pretty=format:"- %s" --no-merges)
        else
          CHANGELOG=$(git log $LAST_TAG..HEAD --pretty=format:"- %s" --no-merges)
        fi
        
        # Create changelog file
        cat > CHANGELOG.md << EOF
        # Changelog for ${{ steps.version.outputs.version }}
        
        ## Changes
        $CHANGELOG
        
        ## Features
        - 🛡️ Anti-bootloop protection with automatic recovery
        - 💾 Comprehensive backup system with encryption
        - 🌐 WebUI interface for easy management
        - 🔒 Hybrid RSA+AES encryption for secure backups
        - 🔄 Multi-stage recovery mechanisms
        - 📱 Progressive Web App with Material Design
        
        ## Requirements
        - Android API 33-35
        - KernelSU v0.7.0+ (version code 10940+)
        - ARM64 architecture
        
        ## Installation
        1. Download the ZIP file from this release
        2. Install via KernelSU Manager or MMRL app
        3. Reboot your device
        4. Access WebUI through KernelSU manager
        EOF
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.version }}
        release_name: "KernelSU Anti-Bootloop & Backup ${{ steps.version.outputs.version }}"
        body_path: ./CHANGELOG.md
        files: ${{ env.ZIP_FILE }}
        draft: false
        prerelease: ${{ contains(steps.version.outputs.version, '-') }}
        make_latest: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Update MMRL repository
      run: |
        # This will trigger the MMRL repository update workflow
        curl -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/overspend1/kernelsu-antibootloop-and-backup/dispatches \
          -d '{"event_type":"update-mmrl"}'